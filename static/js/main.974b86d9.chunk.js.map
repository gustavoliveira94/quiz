{"version":3,"sources":["serviceWorker.js","styles/main/container.js","styles/main/content.js","styles/main/create/index.js","styles/questions/container.js","styles/questions/title.js","components/questions/index.js","actions/questions.js","actionsTypes/index.js","styles/logo/index.js","components/top/index.js","pages/main/index.js","styles/create/container.js","styles/create/content.js","styles/create/form.js","styles/create/input.js","styles/create/answers.js","styles/create/action.js","styles/create/contentactions.js","styles/create/add.js","styles/create/contentanswers.js","components/formcreate/index.js","pages/create/index.js","styles/quiz/container.js","styles/quiz/content.js","styles/quiz/title.js","styles/quiz/questions.js","styles/quiz/contentquestions.js","styles/quiz/answer.js","styles/quiz/contentanswer.js","pages/quiz/index.js","routes.js","App.js","styles/global.js","reducers/quiz.js","index.js"],"names":["Boolean","window","location","hostname","match","Container","styled","div","Content","ul","Create","li","Title","h4","Questions","data","dispatch","useDispatch","onClick","type","removeQuiz","_id","className","title","to","style","textDecoration","width","height","marginTop","name","description","questions","length","Logo","Top","useLocation","pathname","color","position","left","Main","renderQuiz","useSelector","quiz","data-testid","map","key","Form","form","Input","input","Answers","Action","button","ContentActions","Add","ContentAnswers","FormCreate","useState","error","setError","info","setInfo","question","textAnswers","answers","correct","setQuestions","add","more","setMore","createMoreAnswers","e","preventDefault","createQuiz","Math","floor","random","setQuiz","htmlFor","required","onChange","target","value","trim","createAnswers","handleAnswers","index","filter","a","ContentQuestions","Answer","props","incorrect","ContentAnswer","Quiz","quizId","disabled","setDisabled","setAnswers","setCorrect","setIncorrect","count","setCount","id","useParams","q","String","answer","find","c","corrects","verifyAnswer","Routes","path","process","exact","component","App","GlobalStyle","createGlobalStyle","INITIAL_STATE","state","action","persistConfig","storage","persistedReducer","persistReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.974b86d9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: calc(100vh - 60px);\r\n    overflow: scroll;\r\n    margin-top: 15px;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #d3d3d3;\r\n    }\r\n`;\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\nconst Content = styled.ul`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    flex-wrap: wrap;\r\n    width: 90%;\r\n    max-width: 1200px;\r\n    margin: 50px 5%;\r\n\r\n    li {\r\n        list-style: none;\r\n    }\r\n`;\r\n\r\nexport default Content;\r\n","import styled from 'styled-components';\r\n\r\nconst Create = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50px;\r\n    position: absolute;\r\n    bottom: 20px;\r\n    left: 20px;\r\n    background-color: #46b3e6;\r\n    cursor: pointer;\r\n    box-shadow: 2px 3px 10px 1px rgba(0, 0, 0, 0.59);\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n    p {\r\n        font-size: 48px;\r\n        color: #fff;\r\n        font-weight: lighter;\r\n    }\r\n`;\r\n\r\nexport default Create;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.li`\r\n    position: relative;\r\n    width: 280px;\r\n    height: 120px;\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    margin: 0 20px;\r\n    box-shadow: 2px 3px 10px 1px rgba(0, 0, 0, 0.1);\r\n    margin-top: 15px;\r\n\r\n    :hover {\r\n        cursor: pointer;\r\n        opacity: 0.9;\r\n    }\r\n\r\n    i {\r\n        position: absolute;\r\n        right: 10px;\r\n        z-index: 2;\r\n        color: #f00;\r\n    }\r\n`;\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\nconst Title = styled.h4`\r\n    color: #000;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n`;\r\n\r\nexport default Title;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Styles\nimport Container from '../../styles/questions/container';\nimport Title from '../../styles/questions/title';\n\n// Actions\nimport { removeQuiz } from '../../actions';\n\nconst Questions = ({ data }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <Container>\n            <i\n                onClick={() => dispatch(removeQuiz(data._id))}\n                className=\"fas fa-minus-circle\"\n                title=\"remover\"\n            />\n            <Link\n                to={`/quiz/${data._id}`}\n                style={{\n                    textDecoration: 'none',\n                    width: '100%',\n                    height: '100%',\n                    marginTop: 20,\n                }}\n            >\n                <Title title={data.name}>Name: {data.name}</Title>\n                <Title title={data.description}>\n                    Descrição: {data.description}\n                </Title>\n                <br />\n                <Title>\n                    {data.questions.length <= 1 ? 'Pergunta' : 'Perguntas'}{' '}\n                    {data.questions.length}\n                </Title>\n            </Link>\n        </Container>\n    );\n};\n\nQuestions.propTypes = {\n    data: PropTypes.shape.isRequired,\n};\n\nexport default Questions;\n","import { SET_QUIZ, REMOVE_QUIZ } from '../actionsTypes';\n\nexport const setQuiz = ({ name, description, questions }) => {\n    return dispatch => {\n        dispatch({\n            type: SET_QUIZ,\n            data: {\n                _id: Math.floor(Math.random() * 161102312113245646500),\n                name,\n                description,\n                questions,\n            },\n        });\n    };\n};\n\nexport const removeQuiz = data => {\n    return dispatch => {\n        dispatch({\n            type: REMOVE_QUIZ,\n            data,\n        });\n    };\n};\n","export const SET_QUIZ = 'SET_QUIZ';\r\nexport const REMOVE_QUIZ = 'REMOVE_QUIZ';\r\n","import styled from 'styled-components';\n\nconst Logo = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 60px;\n    border-bottom: 1px solid #000;\n    box-shadow: 2px 3px 10px 1px rgba(0, 0, 0, 0.59);\n\n    a {\n        text-decoration: none;\n    }\n\n    h1 {\n        font-family: 'Alatsi', sans-serif;\n        color: #000;\n    }\n`;\n\nexport default Logo;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\n// Styles\nimport Logo from '../../styles/logo';\n\nconst Top = () => {\n    const location = useLocation();\n\n    return (\n        <Logo>\n            {location.pathname !== '/' && (\n                <Link\n                    to=\"/\"\n                    style={{\n                        textDecoration: 'none',\n                        color: '#000',\n                        position: 'absolute',\n                        left: 20,\n                    }}\n                >\n                    <i className=\"fas fa-2x fa-angle-left\" />\n                </Link>\n            )}\n            <Link to=\"/\">\n                <h1>QUIZ</h1>\n            </Link>\n        </Logo>\n    );\n};\n\nexport default Top;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// Styles\nimport Container from '../../styles/main/container';\nimport Content from '../../styles/main/content';\nimport Create from '../../styles/main/create';\n\n// Component\nimport Questions from '../../components/questions';\nimport Top from '../../components/top';\n\nconst Main = () => {\n    const renderQuiz = useSelector(({ quiz }) => quiz);\n    return (\n        <>\n            <Top />\n            <Container>\n                <Content data-testid=\"quiz\">\n                    {renderQuiz &&\n                        renderQuiz.quiz.map(quiz => (\n                            <Questions key={quiz._id} data={quiz} />\n                        ))}\n                </Content>\n                <Create>\n                    <Link to=\"/create\" data-testid=\"create\">\n                        <p>+</p>\n                    </Link>\n                </Create>\n            </Container>\n        </>\n    );\n};\n\nexport default Main;\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: calc(100% - 60px);\r\n    overflow-y: scroll;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #d3d3d3;\r\n    }\r\n`;\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\n\nconst Content = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 90%;\n    height: 100%;\n    margin: 40px 5%;\n`;\n\nexport default Content;\n","import styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n    position: relative;\r\n    width: 600px;\r\n    height: 800px;\r\n    background-color: #fff;\r\n    padding: 15px;\r\n    overflow-y: scroll;\r\n\r\n    label {\r\n        color: #000;\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #d3d3d3;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        width: 90%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport default Form;\r\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n    width: 100%;\n    height: 40px;\n    border: 1px solid #000;\n    padding: 0 10px;\n    margin: 5px 0;\n`;\n\nexport default Input;\n","import styled from 'styled-components';\r\n\r\nconst Answers = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: flex-start !important;\r\n    width: 100%;\r\n\r\n    i {\r\n        color #f00;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport default Answers;\r\n","import styled from 'styled-components';\n\nconst Action = styled.button`\n    width: 40%;\n    height: 50px;\n    background-color: #46b3e6;\n    color: #fff;\n    font-size: 18px;\n    border: 0;\n    cursor: pointer;\n\n    @media (max-width: 500px) {\n        font-size: 16px;\n    }\n`;\n\nexport default Action;\n","import styled from 'styled-components';\r\n\r\nconst ContentActions = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: calc(100% - 30px);\r\n    height: 60px;\r\n`;\r\n\r\nexport default ContentActions;\r\n","import styled from 'styled-components';\r\n\r\nconst Add = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    button {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border-radius: 15px;\r\n        margin-left: 5px;\r\n        color: #fff;\r\n        cursor: pointer;\r\n        border: 0;\r\n\r\n        i {\r\n            width: 18px;\r\n            color: #46b3e6;\r\n            background-color: #fff;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Add;\r\n","import styled from 'styled-components';\r\n\r\nconst ContentAnswers = styled.div`\r\n    width: 100%;\r\n    min-height: calc(100% - 430px);\r\n    height: 200px;\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #d3d3d3;\r\n    }\r\n`;\r\n\r\nexport default ContentAnswers;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// Styles\nimport Form from '../../styles/create/form';\nimport Input from '../../styles/create/input';\nimport Answers from '../../styles/create/answers';\nimport Action from '../../styles/create/action';\nimport ContentActions from '../../styles/create/contentactions';\nimport Add from '../../styles/create/add';\nimport ContentAnswers from '../../styles/create/contentanswers';\n\n// Actions\nimport { setQuiz } from '../../actions';\n\nconst FormCreate = () => {\n    const dispatch = useDispatch();\n\n    const [error, setError] = useState('');\n\n    const [info, setInfo] = useState({\n        name: '',\n        description: '',\n    });\n\n    const [questions, setQuestions] = useState({\n        question: '',\n        textAnswers: '',\n        answers: [],\n        correct: '',\n    });\n\n    const [more, setMore] = useState({\n        add: [],\n    });\n\n    const handleAnswers = e => {\n        setQuestions({ ...questions, textAnswers: e.target.value });\n    };\n\n    const createAnswers = e => {\n        if (questions.textAnswers.trim()) {\n            setQuestions({\n                ...questions,\n                answers: [\n                    ...questions.answers,\n                    {\n                        _id: Math.floor(\n                            Math.random() * 132156102364564132132456\n                        ),\n                        name: questions.textAnswers,\n                    },\n                ],\n            });\n        }\n        e.preventDefault();\n    };\n\n    const resetForm = () => {\n        setQuestions({\n            ...questions,\n            question: '',\n            answers: [],\n            textAnswers: '',\n            correct: '',\n        });\n    };\n\n    const createMoreAnswers = e => {\n        e.preventDefault();\n        if (\n            questions.answers.length >= 4 &&\n            questions.correct &&\n            questions.question\n        ) {\n            resetForm();\n            setMore({\n                ...more,\n                add: [\n                    ...more.add,\n                    {\n                        answers: questions.answers,\n                        correct: questions.correct,\n                        question: questions.question,\n                    },\n                ],\n            });\n            setError('');\n        }\n\n        if (!questions.question) {\n            setError('Por favor, adicione uma pergunta!');\n        }\n\n        if (!questions.correct) {\n            setError('Por favor, adicione uma resposta correta!');\n        }\n\n        if (questions.answers.length < 4) {\n            setError('Por favor, adicione pelo menos 4 respostas!');\n        }\n    };\n\n    const createQuiz = e => {\n        e.preventDefault();\n        if (more.add.length < 1) {\n            setError('Por favor, adicione pelo menos 1 pergunta!');\n        }\n        dispatch(\n            setQuiz({\n                name: info.name,\n                description: info.description,\n                questions: more.add,\n            })\n        );\n        window.location = '/';\n    };\n\n    return (\n        <Form>\n            <label htmlFor=\"name\">Nome:</label>\n            <Input\n                data-testid=\"name\"\n                name=\"name\"\n                required\n                onChange={e => setInfo({ ...info, name: e.target.value })}\n            />\n            <label htmlFor=\"description\">Descrição:</label>\n            <Input\n                data-testid=\"description\"\n                name=\"description\"\n                required\n                onChange={e =>\n                    setInfo({ ...info, description: e.target.value })\n                }\n            />\n            <label htmlFor=\"question\">Pergunta:</label>\n            <Input\n                data-testid=\"question\"\n                name=\"question\"\n                value={questions.question}\n                onChange={e =>\n                    setQuestions({\n                        ...questions,\n                        question: e.target.value,\n                    })\n                }\n            />\n            <label htmlFor=\"correct\">Resposta correta:</label>\n            <Input\n                data-testid=\"correct\"\n                name=\"correct\"\n                value={questions.correct}\n                onChange={e =>\n                    setQuestions({\n                        ...questions,\n                        correct: e.target.value,\n                    })\n                }\n            />\n            <Add>\n                <label htmlFor=\"answers\">Respostas:</label>\n                <button\n                    type=\"button\"\n                    onClick={e => createAnswers(e)}\n                    data-testid=\"create-answers\"\n                >\n                    <i className=\"fas fa-plus-circle\" />\n                </button>\n            </Add>\n            <Input\n                data-testid=\"answers\"\n                value={questions.textAnswers}\n                name=\"answers\"\n                onChange={e => handleAnswers(e)}\n            />\n            <small style={{ color: '#f05' }}>{error}</small>\n            <ContentAnswers data-testid=\"content-answers\">\n                {questions.answers.length >= 1 &&\n                    questions.answers.map((question, index) => (\n                        <Answers key={index}>\n                            <span>\n                                Resposta: {question.name}{' '}\n                                <i\n                                    onClick={() => {\n                                        setQuestions({\n                                            ...questions,\n                                            answers: [\n                                                ...questions.answers.filter(\n                                                    a =>\n                                                        a.name !== question.name\n                                                ),\n                                            ],\n                                        });\n                                    }}\n                                    className=\"fas fa-minus-circle\"\n                                />\n                            </span>\n                        </Answers>\n                    ))}\n            </ContentAnswers>\n            <ContentActions>\n                <Action data-testid=\"create-quiz\" onClick={e => createQuiz(e)}>\n                    Criar\n                </Action>\n                <Action\n                    data-testid=\"create-more-answers\"\n                    onClick={e => createMoreAnswers(e)}\n                >\n                    Adicionar Pergunta\n                </Action>\n            </ContentActions>\n        </Form>\n    );\n};\n\nexport default FormCreate;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\n\n// Styles\nimport Container from '../../styles/create/container';\nimport Content from '../../styles/create/content';\n\n// Components\nimport Top from '../../components/top';\nimport FormCreate from '../../components/formcreate';\n\nconst Create = () => {\n    return (\n        <>\n            <Top />\n            <Container>\n                <Content>\n                    <FormCreate />\n                </Content>\n            </Container>\n        </>\n    );\n};\n\nexport default Create;\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: calc(100% - 60px);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\nconst Content = styled.div`\r\n    width: 500px;\r\n    height: calc(100% - 60px);\r\n    max-height: 800px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background-color: #fff;\r\n    box-shadow: 2px 3px 10px 1px rgba(0, 0, 0, 0.1);\r\n    margin: 60px 0;\r\n\r\n    @media (max-width: 500px) {\r\n        width: 90%;\r\n        margin: 30px 5%;\r\n        min-height: 400px;\r\n    }\r\n`;\r\n\r\nexport default Content;\r\n","import styled from 'styled-components';\n\nconst Title = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    text-align: center;\n    border-bottom: 4px solid #e7ecef;\n    padding-bottom: 6px;\n\n    h2 {\n        width: 100px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        font-size: 16px;\n    }\n\n    span {\n        :nth-of-type(1) {\n            position: absolute;\n            left: 15px;\n            white-space: nowrap;\n            font-size: 14px;\n        }\n        :nth-of-type(2) {\n            position: absolute;\n            right: 15px;\n            white-space: nowrap;\n            font-size: 14px;\n        }\n    }\n`;\n\nexport default Title;\n","import styled from 'styled-components';\n\nconst Questions = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 15px;\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar {\n        width: 4px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background: #d3d3d3;\n    }\n`;\n\nexport default Questions;\n","import styled from 'styled-components';\r\n\r\nconst ContentQuestions = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: auto;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #e7ecef;\r\n\r\n    h3 {\r\n        padding-top: 10px;\r\n    }\r\n\r\n    button {\r\n        border: 0;\r\n        height: 40px;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport default ContentQuestions;\r\n","import styled from 'styled-components';\n\nconst Answer = styled.button`\n    background-color: ${props => props.correct && '#b4be58'};\n    background-color: ${props => props.incorrect && '#ff6060'};\n    color: ${props => props.correct && '#fff'};\n    color: ${props => props.incorrect && '#fff'};\n`;\n\nexport default Answer;\n","import styled from 'styled-components';\r\n\r\nconst ContentAnswer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 0;\r\n\r\n    button {\r\n        width: 100%;\r\n    }\r\n\r\n    p {\r\n        margin-left: 10px;\r\n    }\r\n`;\r\n\r\nexport default ContentAnswer;\r\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\n// Styles\nimport Container from '../../styles/quiz/container';\nimport Content from '../../styles/quiz/content';\nimport Title from '../../styles/quiz/title';\nimport Questions from '../../styles/quiz/questions';\nimport ContentQuestions from '../../styles/quiz/contentquestions';\nimport Answer from '../../styles/quiz/answer';\nimport ContentAnswer from '../../styles/quiz/contentanswer';\n\n// Component\nimport Top from '../../components/top';\n\nconst Quiz = () => {\n    const quizId = useSelector(({ quiz }) => quiz);\n    const [disabled, setDisabled] = useState([]);\n    const [answers, setAnswers] = useState([]);\n    const [correct, setCorrect] = useState([]);\n    const [incorrect, setIncorrect] = useState([]);\n    const [count, setCount] = useState(0);\n    const id = useParams();\n\n    // Quiz Filter ID\n    const quiz = quizId.quiz.filter(q => String(q._id) === id.id);\n\n    // Correct Answers\n    const verifyAnswer = (corrects, answer, question) => {\n        setAnswers([...answers, answer]);\n\n        if (corrects === answer.name) {\n            setCount(count + 1);\n            setCorrect([...correct, answer]);\n            setDisabled([...disabled, question]);\n        } else {\n            setIncorrect([...incorrect, answer]);\n            setDisabled([...disabled, question]);\n        }\n    };\n\n    return (\n        <>\n            <Top />\n            <Container>\n                <Content>\n                    <Title>\n                        <span>\n                            {quiz && quiz[0].questions.length > 1\n                                ? 'Perguntas:'\n                                : 'Pergunta:'}{' '}\n                            {quiz && quiz[0].questions.length}\n                        </span>\n                        <h2 title={quiz && quiz.map(q => q.name)}>\n                            {quiz && quiz.map(q => q.name)}\n                        </h2>{' '}\n                        <span>R. certas: {count}</span>\n                    </Title>\n                    <Questions>\n                        {quiz &&\n                            quiz[0].questions.map(q => (\n                                <ContentQuestions key={q.question}>\n                                    <h3>Pergunta: {q.question}</h3>\n                                    <br />\n                                    {q.answers.map((answer, index) => (\n                                        <ContentAnswer key={index}>\n                                            <Answer\n                                                data-testid=\"option\"\n                                                type=\"button\"\n                                                correct={correct.find(\n                                                    c => c._id === answer._id\n                                                )}\n                                                incorrect={incorrect.find(\n                                                    c => c._id === answer._id\n                                                )}\n                                                disabled={disabled.find(\n                                                    a => a === q.question\n                                                )}\n                                                onClick={() =>\n                                                    verifyAnswer(\n                                                        q.correct,\n                                                        answer,\n                                                        q.question\n                                                    )\n                                                }\n                                            >\n                                                <p>{answer.name}</p>\n                                            </Answer>\n                                        </ContentAnswer>\n                                    ))}\n                                </ContentQuestions>\n                            ))}\n                    </Questions>\n                </Content>\n            </Container>\n        </>\n    );\n};\n\nexport default Quiz;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// Pages\nimport Main from './pages/main';\nimport Create from './pages/create';\nimport Quiz from './pages/quiz';\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route\n                    path={`${process.env.PUBLIC_URL}/`}\n                    exact\n                    component={Main}\n                />\n                <Route\n                    path={`${process.env.PUBLIC_URL}/create`}\n                    component={Create}\n                />\n                <Route\n                    path={`${process.env.PUBLIC_URL}/quiz/:id`}\n                    component={Quiz}\n                />\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\n\n// Routes\nimport Routes from './routes';\n\nconst App = () => {\n    return <Routes />;\n};\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        outline: 0;\r\n        box-sizing: border-box;\r\n        font-family: 'Poppins', sans-serif;\r\n    }\r\n\r\n    html, body, #root {\r\n        height: 100vh;\r\n    }\r\n\r\n    body {\r\n        overflow-y: hidden;\r\n        -webkit-font-smoothing: antialiased !important;\r\n        background-color: #e7ecef;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { SET_QUIZ, REMOVE_QUIZ } from '../actionsTypes';\n\nconst INITIAL_STATE = {\n    quiz: [],\n};\n\nexport const quiz = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SET_QUIZ:\n            return {\n                ...state,\n                quiz: [...state.quiz, action.data],\n            };\n        case REMOVE_QUIZ:\n            return {\n                ...state,\n                quiz: [...state.quiz.filter(q => q._id !== action.data)],\n            };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport GlobalStyle from './styles/global';\nimport * as reducers from './reducers';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\nconst persistedReducer = persistReducer(\n    persistConfig,\n    combineReducers(reducers)\n);\n\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n            <GlobalStyle />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}